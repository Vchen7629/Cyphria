---
- name: Role Facts
  ansible.builtin.include_role:
    name: '{{ role }}'
    tasks_from: facts
  loop:
    - k3s
    - cilium
  loop_control:
    loop_var: role

- name: Remove any leftover Flannel interfaces and configs
  become: true
  shell: |
    ip link delete flannel.1 2>/dev/null || true
    rm -rf /var/lib/cni/flannel /etc/cni/net.d/10-flannel.conflist

- name: Restart K3s after cleanup
  become: true
  systemd:
    name: k3s
    state: restarted

- name: Cilium Installation
  when: inventory_hostname in k3s_map.server.hosts
  block:
    - name: Wait for K3s API server
      ansible.builtin.wait_for:
        port: "{{ k3s_vars.server.api.port }}"
        timeout: 30
      any_errors_fatal: true

    - name: Download archive
      ansible.builtin.get_url:
        url: '{{ item.url }}'
        checksum: sha256:{{ item.url }}.sha256sum
        dest: /tmp
        owner: root
        group: root
        mode: '644'
      loop: '{{ cilium_resources.release }}'
      register: cilium_result
      delay: 1
      retries: 3
      until: cilium_result is not failed
      check_mode: false

    - name: Install binary
      ansible.builtin.unarchive:
        src: /tmp/{{ item.file }}
        dest: '{{ k3s_map.node.directory.bin }}'
        owner: root
        group: root
        mode: '755'
        remote_src: true
      loop: '{{ cilium_resources.release }}'
    
    - name: Remove archive
      ansible.builtin.file:
        path: /tmp/{{ item.file }}
        state: absent
      loop: '{{ cilium_resources.release }}'
      check_mode: false
    
    - name: Add repository
      kubernetes.core.helm_repository:
        name: '{{ cilium_vars.kubernetes.helm.repository.org }}'
        repo_url: '{{ cilium_map.helm.repository.url }}'
        force_update: true
      register: cilium_result
      delay: 1
      retries: 3
      until: cilium_result is not failed

    - name: Chart Setup
      run_once: true
      block:
        #- name: Apply gateway-api crds manifest
        #  kubernetes.core.k8s:
        #    kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
        #    src: '{{ cilium_project.release.gateway_api.url }}/{{ cilium_project.release.gateway_api.file }}'
        #  register: cilium_result
        #  delay: 1
        #  retries: 3
        #  until: cilium_result is not failed
        
        - name: Set chart setup fact
          ansible.builtin.set_fact:
            cilium_setup: true

        - name: Set chart postinstall fact
          ansible.builtin.set_fact:
            cilium_postinstall: false

        - name: Get secret info
          kubernetes.core.k8s_info:
            kind: Secret
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: hubble-server-certs
            namespace: '{{ cilium_vars.kubernetes.namespace }}'
            wait_timeout: 10
            wait: true
          register: cilium_secret
          no_log: true

        - name: Install chart
          kubernetes.core.helm:
            chart_ref: '{{ cilium_map.helm.chart.reference }}'
            chart_version: '{{ cilium_vars.kubernetes.helm.chart.version }}'
            kubeconfig: '{{ k3s_project.cluster.kubeconfig }}'
            name: '{{ cilium_vars.kubernetes.helm.chart.name }}'
            namespace: '{{ cilium_vars.kubernetes.namespace }}'
            timeout: '{{ cilium_map.helm.timeout }}'
            values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
            create_namespace: true
            update_repo_cache: true
            wait: true
          register: cilium_result
          delay: 1
          retries: 3
          until: cilium_result is not failed

    - name: Wait for Cilium pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: "{{ cilium_vars.kubernetes.namespace }}"
        label_selectors:
          - k8s-app=cilium
        kubeconfig: "{{ k3s_project.cluster.kubeconfig }}"
      register: cilium_pods
      retries: 30
      delay: 10
      until:
        - cilium_pods.resources is defined
        - cilium_pods.resources | length > 0
        - cilium_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length == cilium_pods.resources | length

    - name: Verify Cilium connectivity
      ansible.builtin.command:
        cmd: kubectl get nodes -o wide
      register: nodes_status
      changed_when: false
