- name: role facts
  ansible.builtin.import_tasks:
    file: facts.yaml

- name: Role Reset
  block:
    - name: Stop and disable K3s
      ansible.builtin.systemd:
        name: k3s
        state: stopped
        enabled: no
      ignore_errors: true
      become: true
    
    - name: Kill lingering K3s and container processes
      ansible.builtin.shell: |
        pkill -f k3s || true
        pkill -f containerd-shim || true
        pkill -f containerd || true
        pkill -f kubelet || true
      args:
        executable: /bin/bash
      become: true
      ignore_errors: true
    
    - name: Remove leftover CNI interfaces
      ansible.builtin.shell: |
        ip link delete cni0 2>/dev/null || true
        ip link delete flannel.1 2>/dev/null || true
        ip link delete cilium_net 2>/dev/null || true
        ip link delete cilium_host 2>/dev/null || true
      ignore_errors: true
      become: true

    - name: Remove cluster files
      ansible.builtin.shell: |
        set -eo pipefail
        kill -KILL -f {{ k3s_project.node.binary }} || true
        if [[ -d {{ item }} ]]; then
          while read -r process; do
            kill -KILL "$process" || true
          done < <(ps -eo pid= -o args= | grep {{ item }} | grep -v $$ | awk '{print $1}')
          while read -r mount; do
            umount -lf "$mount" || true
          done < <(findmnt -no TARGET | grep {{ item }} | sort -r)
          rm -rf {{ item }} || true
        fi
      args:
        executable: /bin/bash
      changed_when: true
      loop:
        - /var/lib/cni
        - /var/lib/kubelet
        - /var/lib/rancher
        - /etc/cni
        - /opt/cni
        - /run/k3s
      register: result
      ignore_errors: true
    
    - name: Server Reset
      when: inventory_hostname in k3s_map.server.hosts
      block:
        - name: Remove server files
          ansible.builtin.file:
            path: '{{ item }}'
            state: absent
          loop: 
            - /usr/local/bin/kubepug
        
        - name: Remove variable from env file
          ansible.builtin.lineinfile:
            path: /etc/environment
            line: KUBECONFIG=/etc/rancher/k3s/k3s.yaml
            regexp: ^KUBECONFIG
            state: absent

        - name: Remove generic files
          ansible.builtin.file:
            path: '{{ item }}'
            state: absent
          loop:
            - /usr/local/bin/k3s
            - /usr/local/bin/crictl
            - /usr/local/bin/ctr
            - /usr/local/bin/kubectl
            - /etc/rancher/k3s
            - /etc/sysctl.d/90-kubernetes-node.conf
            - /etc/sysctl.d/99-zzz-override_cilium.conf
            - /etc/systemd/system/{{ k3s_map.service.name }}.service
            - /etc/systemd/system/{{ k3s_map.service.name }}.service.env

        - name: remove local kubeconfig files
          ansible.builtin.file:
            path: '{{ k3s_vars.cluster.kubeconfig.path }}/{{ item }}'
            state: absent
          delegate_to: localhost
          loop:
            - cache
            - config
            - http-cache
          when: k3s_vars.cluster.kubeconfig.local is truthy
          become: false
          run_once: true

        - name: Delete old CNI interfaces
          ansible.builtin.shell: |
            ip link delete cni0 2>/dev/null || true
            ip link delete flannel.1 2>/dev/null || true
          args:
            executable: /bin/bash
          ignore_errors: true
        
        - name: Reset systemd
          ansible.builtin.command:
            cmd: systemctl '{{ item }}'
          changed_when: false
          loop:
            - daemon-reload
            - reset-failed
