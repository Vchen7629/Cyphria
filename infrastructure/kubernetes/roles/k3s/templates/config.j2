data-dir: {{ k3s_map.node.directory.data }}
{% if k3s_map.node.default_registry_endpoint.enabled is falsy %}
disable-default-registry-endpoint: true
{% endif %}
{% if k3s_node.service | lower == 'server' %}
bind-address: {{ k3s_node.ip }}
cluster-domain: {{ k3s_vars.cluster.domain }}
{% if k3s_map.server.ha is truthy and k3s_postinstall is falsy and inventory_hostname == k3s_map.server.default_host %}
cluster-init: true
{% endif %}
embedded-registry: true
disable:
  - traefik
disable-network-policy: true
flannel-backend: none
{% if k3s_map.server.ha %}
etcd-expose-metrics: true
{% endif %}
kube-controller-manager-arg: bind-address={{ k3s_node.ip }}
kube-scheduler-arg: bind-address={{ k3s_node.ip }}
{% endif %}
kubelet-arg:
  {{ k3s_resources.node.kubelet.args | to_nice_yaml | indent(2) }}
{% if k3s_map.server.ha is truthy and (k3s_postinstall is truthy or k3s_node.service | lower == 'agent') %}
server: https://{{ k3s_vars.server.api.host }}:{{ k3s_vars.server.api.port }}
{% elif
  (inventory_hostname != k3s_map.server.default_host and k3s_node.service | lower == 'server') or
  (k3s_map.server.non_ha is truthy and k3s_node.service | lower == 'agent')
%}
server: https://{{ k3s_map.server.default_host }}:{{ k3s_vars.server.api.port }}
{% endif %}
{% if k3s_map.server.ha is truthy and k3s_node.service | lower == 'server' %}
tls-san:
  {{ k3s_vars.cluster.tls_san | to_nice_yaml | indent(2) }}
{%- endif %}
{% if k3s_project.cluster.token | length > 0 %}
token: {{ k3s_project.cluster.token }}
{% endif %}