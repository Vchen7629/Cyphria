---
# ArgoCD Server
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: argocd-server
  namespace: argocd
spec:
  endpointSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values:
          - argocd-server
          - argocd-server-metrics
  ingress:
    # gRPC + webUI for argocd server
    - toPorts:
        - ports:
            - port: "80"
              protocol: TCP
            - port: "443"
              protocol: TCP
    # Exposing ArgoCD server metrics endpoint
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: prometheus
      toPorts:
        - ports:
            - port: "8083"
              protocol: TCP
  egress:
    # DNS lookups (UDP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    # DNS lookups (TCP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: TCP
    # Kubernetes API access
    - toEntities:
        - kube-apiserver
    - toEntities:
        - host
    # Allowing argocd server -> argocd repo server
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-repo-server
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "8081"
              protocol: TCP
    # Allowing argocd server -> dex server
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-dex-server
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "5556"
              protocol: TCP
            - port: "5557"
              protocol: TCP
    # Allowing argocd server -> redis
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-redis
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP

---
# ArgoCD Repo Server
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  endpointSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values:
          - argocd-repo-server
          - argocd-repo-server-metrics
  ingress:
    # From ArgoCD components
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-server
            io.kubernetes.pod.namespace: argocd
        - matchLabels:
            app.kubernetes.io/name: argocd-application-controller
            io.kubernetes.pod.namespace: argocd
        - matchLabels:
            app.kubernetes.io/name: argocd-applicationset-controller
            io.kubernetes.pod.namespace: argocd
        - matchLabels:
            app.kubernetes.io/name: argocd-notifications-controller
            io.kubernetes.pod.namespace: argocd
        - matchLabels:
            app.kubernetes.io/name: frontend
            io.kubernetes.pod.namespace: frontend
      toPorts:
        - ports:
            - port: "8081"
              protocol: TCP
    # Metrics endpoint
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: prometheus
      toPorts:
        - ports:
            - port: "8084"
              protocol: TCP
  egress:
    # DNS lookups (UDP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    # DNS lookups (TCP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: TCP
    # Github access
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP
            - port: "22"
              protocol: TCP
    # Redis access
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-redis
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP

---
# ArgoCD Redis
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: argocd-redis
  namespace: argocd
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-redis
  ingress:
    # From ArgoCD components
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-repo-server
            io.kubernetes.pod.namespace: argocd
        - matchLabels:
            app.kubernetes.io/name: argocd-server
            io.kubernetes.pod.namespace: argocd
        - matchLabels:
            app.kubernetes.io/name: argocd-application-controller
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP
    # Metrics endpoint
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: prometheus
      toPorts:
        - ports:
            - port: "9121"
              protocol: TCP
  egress:
    # DNS lookups (UDP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"

---
# ArgoCD Dex Server
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: argocd-dex-server
  namespace: argocd
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-dex-server
  ingress:
    # From ArgoCD server
    - fromEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-server
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "5556"
              protocol: TCP
            - port: "5557"
              protocol: TCP
  egress:
    # DNS lookups (UDP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    # DNS lookups (TCP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: TCP
    # Kubernetes API access
    - toEntities:
        - kube-apiserver
    - toEntities:
        - host
    # 3rd party authentication
    - toEntities:
        - world
      toPorts:
        - ports:
            - port: "443"
              protocol: TCP

---
# ArgoCD ApplicationSet Controller
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: argocd-applicationset-controller
  namespace: argocd
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: argocd-applicationset-controller
  egress:
    # DNS lookups (UDP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    # DNS lookups (TCP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: TCP
    # Kubernetes API access
    - toEntities:
        - kube-apiserver
    - toEntities:
        - host
    # Repo server access
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-repo-server
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "8081"
              protocol: TCP

---
# ArgoCD Application Controller
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: argocd-application-controller
  namespace: argocd
spec:
  endpointSelector:
    matchExpressions:
      - key: app.kubernetes.io/name
        operator: In
        values:
          - argocd-application-controller
          - argocd-metrics
  ingress:
    # Metrics endpoint
    - fromEndpoints:
        - matchLabels:
            io.kubernetes.pod.namespace: prometheus
      toPorts:
        - ports:
            - port: "8082"
              protocol: TCP
  egress:
    # DNS lookups (UDP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: UDP
          rules:
            dns:
              - matchPattern: "*"
    # DNS lookups (TCP)
    - toEndpoints:
        - matchLabels:
            k8s-app: kube-dns
            io.kubernetes.pod.namespace: kube-system
      toPorts:
        - ports:
            - port: "53"
              protocol: TCP
    # Kubernetes API access
    - toEntities:
        - kube-apiserver
    - toEntities:
        - host
    # Repo server access
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-repo-server
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "8081"
              protocol: TCP
    # Redis access
    - toEndpoints:
        - matchLabels:
            app.kubernetes.io/name: argocd-redis
            io.kubernetes.pod.namespace: argocd
      toPorts:
        - ports:
            - port: "6379"
              protocol: TCP
