apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: timescaledb-cluster-pg17
spec:
  instances: 1
  # referencing imageCatalog to use timescale extension with postgres
  imageCatalogRef:
    apiGroup: postgresql.cnpg.io
    kind: ImageCatalog
    name: cloudnative-pg-timescaledb-pg17
    major: 17
  # timescale/timescaledb image uses UID/GID 70 for postgres user
  postgresUID: 70
  postgresGID: 70
  # Database PVC (HDD)
  storage:
    pvcTemplate:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Ti
      storageClassName: local-storage
      volumeMode: Filesystem
  # WAL PVC (SSD)
  walStorage:
    pvcTemplate:
      accessModes:
        - "ReadWriteOnce"
      resources:
        requests:
          storage: 100Gi
      storageClassName: local-path
      volumeMode: Filesystem
  # Creating the database with the user secret
  bootstrap:
    initdb:
      database: app
      owner: tiamat
      secret:
        name: cyphria-user-secret
      postInitApplicationSQLRefs:
        configMapRefs:
        - name: init-schema
          key: init-schema.sql
  
  postgresql: 
    # only allow connections over ssl/tls, to app database,
    # app_user user, from the ip range, and using password
    pg_hba:
      - hostssl app tiamat 10.0.0.0/16 scram-sha-256
    shared_preload_libraries:
    - 'timescaledb'
    parameters:
      max_wal_size: "4GB"
      max_wal_senders: "3" 
      wal_level: "replica"
  # backup to hard drive
  backup:
    barmanObjectStore:
      destinationPath: s3://your-bucket-name/postgres-backups
      s3Credentials:
        accessKeyId:
          name: aws-creds
          key: ACCESS_KEY_ID
        secretAccessKey:
          name: aws-creds
          key: SECRET_ACCESS_KEY
      wal:
        compression: gzip
    retentionPolicy: "90d"
  
  resources:
    limits:
      memory: 7G
    requests:
      cpu: "1"
      memory: 1G
  
  monitoring:
    enablePodMonitor: true
  
    