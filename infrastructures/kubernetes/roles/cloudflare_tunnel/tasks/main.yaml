- name: Cloudflare tunnel configuration
  block:
    - name: Create Cloudflare namespace
      kubernetes.core.k8s:
        name: cloudflare-tunnel
        state: present 
        kind: Namespace
        api_version: v1
    
    - name: Set Account ID Fact
      vars:
        cloudflare_env_data: "{{ lookup('ansible.builtin.template', 'env.yaml' ) | from_yaml }}"
      ansible.builtin.set_fact:
        cf_account_id: "{{ cloudflare_env_data['account-id'] }}"

    - name: Set Account ID Fact
      vars:
        cloudflare_env_data: "{{ lookup('ansible.builtin.template', 'env.yaml' ) | from_yaml }}"
      ansible.builtin.set_fact:
        api_token: "{{ cloudflare_env_data['cloudflare-token'] }}"

    - name: Create Cloudflare tunnel via api
      ansible.builtin.uri:
        url: "https://api.cloudflare.com/client/v4/accounts/{{ cf_account_id }}/cfd_tunnel"
        method: POST
        headers: 
          Authorization: "Bearer {{ api_token }}"
          Content-type: "application/json"
        body: "{{ {'name': 'cyphria', 'config_src': 'cloudflare'} | to_json }}"
        return_content: yes
      register: tunnel_result
    
    - name: Set cloudflare tunnel facts
      ansible.builtin.set_fact:
        tunnel_id:     "{{ tunnel_result.json.result.credentials_file.TunnelID }}"
        account_tag:   "{{ tunnel_result.json.result.credentials_file.AccountTag }}"
        tunnel_secret: "{{ tunnel_result.json.result.credentials_file.TunnelSecret }}"

    - name: Save to file
      ansible.builtin.copy:
        dest: "{{ role_path }}/credentials/temp.yaml"
        content: |
          tunnel_id: {{ tunnel_id }}
          account_id: {{ cf_account_id }}
          api_key: {{ api_token }}
      delegate_to: localhost
      become: false
      run_once: true
  
    - name: Deploy to argocd
      kubernetes.core.k8s:
        state: present
        definition: "{{ lookup('ansible.builtin.template', 'argocd-deployment.j2') | from_yaml }}"
        kubeconfig: /etc/rancher/k3s/k3s.yaml
 
