services:
  kafka:
    container_name: kafka-kraft-bitnami
    user: root
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
      - "9094:9094"
      - "29092:29092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=HOST://0.0.0.0:9092,CONTAINER://0.0.0.0:9094,CONTROLLER://0.0.0.0:9093,INTERNAL://0.0.0.0:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,HOST:PLAINTEXT,CONTAINER:PLAINTEXT,INTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=HOST://localhost:9092,CONTAINER://host.docker.internal:9094,CONTROLLER://kafka:9093,INTERNAL://kafka:29092
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=HOST
      - KAFKA_CFG_LOG_DIRS=/bitnami/kafka/data
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false

    volumes:
      - ./kafka-data:/bitnami/kafka
    networks:
      - kafka_net
  kafka-init:
    image: bitnami/kafka:latest
    depends_on:
      - kafka
    entrypoint: >
      bash -c '
        echo "Waiting for Kafka to be ready…";
        until bash -c "echo > /dev/tcp/kafka/29092"; do
          sleep 2;
        done;
        echo "Kafka is up, creating topics…";
        for spec in \
          "_connect-configs:1:1:compact" \
          "_connect-offsets:25:1:compact" \
          "_connect-status:5:1:compact" \
          "raw-data:8:1:delete" \
          "processed_data:8:1:delete" \
          "reddit-data:8:1:delete" \
          "sentiment-analysis:8:1:delete" \
          "test:4:1:delete" \
          "test-dlq:4:1:delete" \

        do
          IFS=":" read topic parts rf policy <<< "$$spec"
          kafka-topics.sh \
            --bootstrap-server kafka:29092 \
            --create \
            --if-not-exists \
            --topic "$$topic" \
            --partitions "$$parts" \
            --replication-factor "$$rf" \
            --config "cleanup.policy=$$policy"
        done
      '
    networks:
      - kafka_net
    
volumes:
  kafka-data:

networks:
  kafka_net:
    name: kafka_default
      