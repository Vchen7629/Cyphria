apiVersion: projectcalico.org/v3
kind: NetworkPolicy
metadata:
  name: prometheus-operator-network-policy
  namespace: prometheus
spec: 
  order: 75
  selector: all()
  types:  
    - Egress
  egress:
    - action: Allow # ArgoCD application controller metrics
      protocol: TCP
      destination:
        namespaceSelector: kubernetes.io/metadata.name == "argocd"
        selector: app.kubernetes.io/name in {"argocd-metrics", "argocd-application-controller"}
        ports: [8082]

    - action: Allow # Scraping ArgoCD Server metrics
      protocol: TCP
      destination:
        namespaceSelector: kubernetes.io/metadata.name == "argocd"
        selector: app.kubernetes.io/name in {"argocd-server", "argocd-server-metrics"}
        ports: [8083]

    - action: Allow # Scraping ArgoCD Repo Server metrics
      protocol: TCP
      destination:
        namespaceSelector: kubernetes.io/metadata.name == "argocd"
        selector: app.kubernetes.io/name in {"argocd-repo-server", "argocd-repo-server-metrics"}
        ports: [8084]
    
    - action: Allow # exposing ArgoCD redis metrics endpoint
      protocol: TCP
      destination:
        namespaceSelector: kubernetes.io/metadata.name == "argocd"
        selector: app.kubernetes.io/name == "argocd-redis"
        ports: [9121]
    
    - action: Allow # exposing cert-manager metrics endpoint
      protocol: TCP
      destination: 
        namespaceSelector: kubernetes.io/metadata.name == "cert-manager"
        selector: all()
        ports: [9402]

    - action: Allow # exposing nginx ingress metrics endpoint
      protocol: TCP
      destination:
        namespaceSelector: kubernetes.io/metadata.name == "nginx"
        selector: app.kubernetes.io/name == "ingress-nginx"
        ports: [10254]
    
    - action: Allow # cloudflare tunnel metrics
      protocol: TCP
      destination: 
        namespaceSelector: kubernetes.io/metadata.name == "cloudflare-tunnel"
        selector: all()
        ports: [20241]